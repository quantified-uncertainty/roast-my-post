#!/usr/bin/env tsx

/**
 * Build script to generate plugin README files from source code
 * This ensures documentation stays synchronized with plugin configuration
 *
 * Generates TWO outputs:
 * 1. Markdown files for human reading (in internal-packages/db/system-agents/agents/readmes/)
 * 2. TypeScript module for runtime access (in internal-packages/db/system-agents/generated-plugin-readmes.ts)
 */

import fs from 'fs';
import path from 'path';
import { createHash } from 'crypto';

// Import readme generators
import { generateReadme as generateFactCheckReadme } from '../src/analysis-plugins/plugins/fact-check/readme-generator';

const READMES = {
  'fact-checker': {
    generator: generateFactCheckReadme,
    markdownOutputPath: '../../db/system-agents/agents/readmes/fact-checker.md'
  }
};

// Generate markdown files and collect content
const readmeContent: Record<string, string> = {};

for (const [id, config] of Object.entries(READMES)) {
  try {
    const content = config.generator();
    readmeContent[id] = content;

    // Write markdown file for human reading
    const markdownPath = path.join(__dirname, config.markdownOutputPath);
    const dir = path.dirname(markdownPath);
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
    }
    fs.writeFileSync(markdownPath, content, 'utf-8');

    console.log(`‚úÖ Generated markdown README for ${id} at ${markdownPath}`);
  } catch (error) {
    console.error(`‚ùå Failed to generate README for ${id}:`, error);
    process.exit(1);
  }
}

// Generate TypeScript module for runtime access
const readmeHash = createHash('sha256').update(JSON.stringify(readmeContent)).digest('hex');

const tsOutput = `/**
 * Auto-generated plugin README content
 * Generated by scripts/generate-plugin-readmes.ts
 * DO NOT EDIT MANUALLY
 *
 * README Hash: ${readmeHash}
 */

export const pluginReadmes = ${JSON.stringify(readmeContent, null, 2)} as const;

export type PluginId = keyof typeof pluginReadmes;

export function getPluginReadme(pluginId: string): string {
  const typedPluginId = pluginId as PluginId;
  return pluginReadmes[typedPluginId] || \`# \${pluginId}\\n\\n*README content not available*\`;
}
`;

// Write TypeScript module to db package for safe imports
const tsOutputPath = path.join(__dirname, '../../db/system-agents/generated-plugin-readmes.ts');
fs.writeFileSync(tsOutputPath, tsOutput, 'utf-8');

console.log(`‚úÖ Generated TypeScript module at ${tsOutputPath}`);
console.log(`üìã Generated ${Object.keys(readmeContent).length} plugin README(s)`);
console.log(`üîç README hash: ${readmeHash}`);
