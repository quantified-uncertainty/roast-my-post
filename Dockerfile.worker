# Worker Dockerfile - uses tsx for runtime transpilation  
# Note: Worker needs full monorepo structure for tsx to resolve workspace packages
FROM node:20-alpine
WORKDIR /app

# Install dependencies for native modules
RUN apk add --no-cache libc6-compat python3 make g++

# Install pnpm globally
RUN npm install -g pnpm@9

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copy all source files with correct ownership
COPY --chown=nextjs:nodejs . .

# Install all dependencies as root (needed for native modules)
RUN pnpm install --frozen-lockfile

# Generate Prisma client
RUN pnpm --filter @roast/db run gen

# Build all workspace packages
RUN pnpm --filter @roast/db run build
RUN pnpm --filter @roast/domain run build  
RUN pnpm --filter @roast/ai run build

# Switch to non-root user for runtime
USER nextjs

# Run the adaptive job processor
CMD ["pnpm", "--filter", "@roast/web", "run", "process-jobs-adaptive"]