name: Docker Build and Push (Staging)

on:
  push:
    branches: [staging]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ARGOCD_SERVER: argo.k8s.quantifieduncertainty.org
  ARGOCD_APP: roast-my-post-staging

jobs:
  build-and-push:
    name: Build and Push Docker Images (Staging)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile
            suffix: ""
            name: "main"
          - dockerfile: Dockerfile.worker
            suffix: "-worker"
            name: "worker"
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.suffix }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=sha-,format=long
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-argocd:
    name: Update ArgoCD Staging Deployment
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Update ArgoCD image tags (staging)
        env:
          ARGOCD_SERVER: ${{ env.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          curl -sSL -o /usr/local/bin/argocd https://${ARGOCD_SERVER}/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          /usr/local/bin/argocd app set ${ARGOCD_APP} \
            --server ${ARGOCD_SERVER} \
            --helm-set image.tag=sha-${{ github.sha }} \
            --helm-set workerImage.tag=sha-${{ github.sha }}
          /usr/local/bin/argocd app sync ${ARGOCD_APP} --server ${ARGOCD_SERVER} || true
          /usr/local/bin/argocd app wait ${ARGOCD_APP} --server ${ARGOCD_SERVER} --timeout 300 --health