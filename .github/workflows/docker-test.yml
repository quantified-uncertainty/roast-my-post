name: Docker Build Test (Non-blocking)

on:
  pull_request:
    paths:
      - 'Dockerfile*'
      - 'apps/**'
      - 'internal-packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/docker-test.yml'

jobs:
  test-docker-builds:
    runs-on: ubuntu-latest
    continue-on-error: true  # Non-blocking - won't fail the PR
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Test Worker Build
        id: worker-build
        run: |
          echo "::group::Testing Worker Docker Build"
          if docker build -f Dockerfile.worker -t worker-test .; then
            echo "worker_build=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Worker Docker build passed"
          else
            echo "worker_build=failed" >> $GITHUB_OUTPUT
            echo "::warning::Worker Docker build failed - see logs above"
          fi
          echo "::endgroup::"
          
      - name: Test Worker Runtime
        id: worker-runtime
        if: steps.worker-build.outputs.worker_build == 'success'
        run: |
          echo "::group::Testing Worker Package Access"
          if docker run --rm worker-test sh -c '
            cd /app/apps/web && 
            npx tsx -e "
              try {
                require(\"@roast/domain\");
                require(\"@roast/db\");
                require(\"@roast/ai\");
                console.log(\"‚úÖ All packages accessible\");
              } catch (e) {
                console.error(\"‚ùå Package loading failed:\", e.message);
                process.exit(1);
              }
            "
          '; then
            echo "worker_runtime=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Worker runtime test passed"
          else
            echo "worker_runtime=failed" >> $GITHUB_OUTPUT
            echo "::warning::Worker runtime test failed - packages may not be accessible"
          fi
          echo "::endgroup::"
          
      - name: Test Main App Build
        id: web-build
        run: |
          echo "::group::Testing Main App Docker Build"
          if docker build \
            --build-arg SKIP_ENV_VALIDATION=true \
            --build-arg DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test" \
            -f Dockerfile \
            -t web-test .; then
            echo "web_build=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Main app Docker build passed"
          else
            echo "web_build=failed" >> $GITHUB_OUTPUT
            echo "::warning::Main app Docker build failed - see logs above"
          fi
          echo "::endgroup::"
          
      - name: Post Results Comment
        if: always()
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            // Check if any tests failed
            const workerBuild = '${{ steps.worker-build.outputs.worker_build }}';
            const workerRuntime = '${{ steps.worker-runtime.outputs.worker_runtime }}';
            const webBuild = '${{ steps.web-build.outputs.web_build }}';
            
            const hasFailures = workerBuild === 'failed' || 
                               workerRuntime === 'failed' || 
                               webBuild === 'failed';
            
            if (hasFailures) {
              const results = [];
              if (workerBuild === 'success') results.push('‚úÖ Worker build: Passed');
              else if (workerBuild === 'failed') results.push('‚ùå Worker build: Failed');
              
              if (workerRuntime === 'success') results.push('‚úÖ Worker runtime: Passed');
              else if (workerRuntime === 'failed') results.push('‚ùå Worker runtime: Failed');
              else if (!workerRuntime) results.push('‚è≠Ô∏è Worker runtime: Skipped');
              
              if (webBuild === 'success') results.push('‚úÖ Main app build: Passed');
              else if (webBuild === 'failed') results.push('‚ùå Main app build: Failed');
              
              const message = `### üê≥ Docker Build Test Results (Non-blocking)
            
            ‚ö†Ô∏è Some Docker builds need attention:
            
            ${results.join('\n')}
            
            Check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details. These tests are non-blocking and for informational purposes only.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }