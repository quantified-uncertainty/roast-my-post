name: Integration Tests on Merge

on:
  push:
    branches: [main]

jobs:
  run-integration-tests:
    name: Run Integration and Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    # PostgreSQL service container
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: roast_my_post_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm --filter @roast/db run gen

      - name: Install Playwright browsers
        run: pnpm --filter @roast/web exec playwright install chromium

      - name: Run database migrations
        run: pnpm --filter @roast/db run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/roast_my_post_test

      - name: Run Integration Tests
        run: |
          export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/roast_my_post_test"
          export AUTH_SECRET="test-secret-for-ci-only"
          export NEXTAUTH_URL="http://localhost:3000"
          export ANTHROPIC_API_KEY="dummy-key-for-ci"
          
          echo "🧪 Running Integration Tests..." >> $GITHUB_STEP_SUMMARY
          pnpm --filter @roast/web run test:ci-integration
          echo "✅ Integration tests passed" >> $GITHUB_STEP_SUMMARY

      - name: Run Playwright Tests
        run: |
          export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/roast_my_post_test"
          export AUTH_SECRET="test-secret-for-ci-only"
          export NEXTAUTH_URL="http://localhost:3000"
          
          echo "🎭 Running Playwright Tests..." >> $GITHUB_STEP_SUMMARY
          cd apps/web && npx playwright test --workers=4
          echo "✅ Playwright tests passed" >> $GITHUB_STEP_SUMMARY

      - name: Summary
        if: always()
        run: |
          echo "## 🔄 Post-Merge Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: main" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This automated test runs after every merge to main to ensure integration stability." >> $GITHUB_STEP_SUMMARY

      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.sha }}
          path: |
            apps/web/test-results/
            apps/web/playwright-report/
          retention-days: 7

      - name: Notify on Failure
        if: failure()
        run: |
          echo "❌ Integration tests failed on main branch!" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "See artifacts for details." >> $GITHUB_STEP_SUMMARY