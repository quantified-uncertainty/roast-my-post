name: Integration Tests on Merge

on:
  push:
    branches: [main]

jobs:
  run-integration-tests:
    name: Run Integration + Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # PostgreSQL service container
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: roast_my_post_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Prisma Client
        run: pnpm --filter @roast/db run gen

      - name: Build dependent packages
        run: pnpm turbo run build --filter='@roast/domain' --filter='@roast/db'

      - name: Install Playwright browsers
        run: pnpm --filter @roast/web exec playwright install chromium

      - name: Run database migrations
        run: pnpm --filter @roast/db run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/roast_my_post_test

      - name: Run Integration Tests
        run: |
          echo "Starting integration tests..."
          if ! pnpm turbo run test:ci-integration --filter='@roast/web'; then
            echo "❌ Integration tests failed"
            exit 1
          fi
          echo "✅ Integration tests passed"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/roast_my_post_test
          AUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000

      - name: Run Playwright Tests
        run: cd apps/web && npx playwright test --workers=2
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/roast_my_post_test
          AUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000
          BYPASS_TOOL_AUTH: "true"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: post-merge-test-results-${{ github.run_number }}
          path: |
            apps/web/coverage/
            apps/web/test-results/
            apps/web/playwright-report/
            apps/web/*.log
          retention-days: 7
          if-no-files-found: ignore